% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core.R
\name{new_callback_cyclical_learning_rate}
\alias{new_callback_cyclical_learning_rate}
\title{Initiate a new cyclical learning rate scheduler}
\usage{
new_callback_cyclical_learning_rate(base_lr = 0.001, max_lr = 0.006,
  step_size = 2000, mode = "triangular", gamma = 1,
  scale_fn = NULL, scale_mode = "cycle")
}
\arguments{
\item{base_lr}{Initial learning rate which is the lower boundary in the
lower boundary in the cycle.}

\item{max_lr}{Upper boundary in the cycle. Functionally, it defines the
cycle amplitude (\code{max_lr - base_lr}). The learning rate at any cycle is
the sum of \code{base_lr} and some scaling of the amplitude; therefore \code{max_lr}
may not actually be reached depending on scaling function.}

\item{step_size}{Number of training iterations per half cycle. Authors
suggest setting step_size \code{2-8} x training iterations in epoch.}

\item{mode}{One of "triangular", "triangular2" or "exp_range". Default
"triangular". Values correspond to policies detailed above. If \code{scale_fn}
is not \code{NULL}, this argument is ignored.}

\item{gamma}{Constant in \code{exp_range} scaling function: \code{gamma^(cycle iterations)}}

\item{scale_fn}{Custom scaling policy defined by a single argument anonymous
function, where \code{0 <= scale_fn(x) <= 1} for all \code{x >= 0}. Mode paramater is
ignored.}

\item{scale_mode}{Either "cycle" or "iterations". Defines whether \code{scale_fn}
is evaluated on cycle number or cycle iterations (training iterations since
start of cycle). Default is "cycle".}
}
\description{
This callback implements a cyclical learning rate policy (CLR).
The method cycles the learning rate between two boundaries with
some constant frequency, as detailed in this paper
(https://arxiv.org/abs/1506.01186).
}
\details{
The amplitude of the cycle can be scaled on a per-iteration or per-cycle
basis. This class has three built-in policies, as put forth in the paper.
\itemize{
\item "triangular": A basic triangular cycle w/ no amplitude scaling.
\item "triangular2": A basic triangular cycle that scales initial amplitude by
half each cycle.
\item "exp_range": A cycle that scales initial amplitude by gamma**(cycle
iterations) at each cycle iteration.
}

For more details, please see paper.
}
\concept{callbacks}
